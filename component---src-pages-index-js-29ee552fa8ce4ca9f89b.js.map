{"version":3,"file":"component---src-pages-index-js-29ee552fa8ce4ca9f89b.js","mappings":"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","sources":["webpack://daniel-klaewer-s-personal-site/../src/image-utils.ts","webpack://daniel-klaewer-s-personal-site/../src/components/hooks.ts","webpack://daniel-klaewer-s-personal-site/../src/components/layout-wrapper.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/picture.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/placeholder.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/main-image.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/gatsby-image.server.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/gatsby-image.browser.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/static-image.server.tsx","webpack://daniel-klaewer-s-personal-site/../src/components/static-image.tsx","webpack://daniel-klaewer-s-personal-site/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://daniel-klaewer-s-personal-site/./src/components/Timeline.js","webpack://daniel-klaewer-s-personal-site/./src/components/CVPage.js","webpack://daniel-klaewer-s-personal-site/./src/components/HomePage.js","webpack://daniel-klaewer-s-personal-site/./src/components/NavigationBar.js","webpack://daniel-klaewer-s-personal-site/./node_modules/better-react-mathjax/esm/MathJaxContext/MathJaxContext.js","webpack://daniel-klaewer-s-personal-site/./node_modules/better-react-mathjax/esm/MathJax/MathJax.js","webpack://daniel-klaewer-s-personal-site/./src/components/PublicationsPage.js","webpack://daniel-klaewer-s-personal-site/./src/components/TalksPage.js","webpack://daniel-klaewer-s-personal-site/./src/pages/index.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from 'react';\n\nconst Timeline = ({ data, getDate, formatDate, getBodyFromItem }) => {\n  const sortFunction = (a, b) => {\n    return new Date(getDate(b)) - new Date(getDate(a))\n  }\n  return (\n    <ol class=\"relative border-l border-neutral-200 mb-2\">\n      {data.sort(sortFunction).map((item) => (\n        <TimelineItem time={formatDate(item)} caption={item.title} body={getBodyFromItem(item)} />\n      ))}\n    </ol>\n  );\n};\n\n\nconst TimelineItem = ({ time, caption, body }) => {\n  return (\n    <li class=\"ml-4\">\n      <div class=\"absolute w-2 h-2 bg-neutral-200 rounded-full mt-2 -left-1 border border-white\"></div>\n      <time class=\"mb-1 text-sm font-normal leading-none text-neutral-300\">{time}</time>\n      <h3 class=\"text-lg font-semibold text-neutral-50\">{caption}</h3>\n      {body}\n    </li>\n  );\n};\n\nexport default Timeline","import React from 'react';\nimport professionalExperienceData from '../data/professionalexperience.json';\nimport educationData from '../data/education.json';\nimport awardData from '../data/awards.json';\nimport Timeline from './Timeline';\n\n\nexport default function CVPage() {\n  return (\n    <div className=\"columns-1 md:columns-2 lg:columns-3 md:mt-4\">\n      {cvSections}\n    </div>\n  );\n}\n\n\nconst CVSection = ( {title, content} ) => {\n  return(\n      <div className=\"rounded border-b md:border border-neutral-700 shadow-lg overflow-hidden px-4 py-2 md:px-4 md:mb-4\">\n        <h1 className=\"font-bold text-white text-xl text-center pb-2\">\n          {title}\n        </h1>\n        {content}\n      </div>\n  )\n}\n\n\nconst getEndDate = (cvItem) => cvItem.endDate;\n\n\nconst getDate = (cvItem) => cvItem.date;\n\n\nconst dateRange = (cvItem) => cvItem.startDate+\"–\"+cvItem.endDate\n\n\nconst formatProfessionalExperience = (item) => {\n  return(\n    <div>\n      <p class=\"text-base font-normal text-neutral-400 hidden lg:block\">{item.company} — {item.city}, {item.country}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.company}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.city}, {item.country}</p>\n    </div>\n  )\n}\n\nconst formatEducationExperience = (item) => {\n  return(\n    <div>\n      <p class=\"text-base font-normal text-neutral-400 hidden lg:block\">{item.school} — {item.city}, {item.country}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.school}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.city}, {item.country}</p>\n    </div>\n  )\n}\n\nconst formatAward = (item) => {\n  return(\n    <div>\n      <p class=\"text-base font-normal text-neutral-400 hidden lg:block\">{item.institution} — {item.city}, {item.country}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.institution}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{item.city}, {item.country}</p>\n    </div>\n  )\n}\n\n\nconst SkillItem = ( {skill, level} ) => {\n  return(\n    <div className=\"flex flex-wrap\">\n      <div className=\"w-40 text-neutral-100\">{skill}</div>\n      <div className=\"text text-neutral-400\">{level}</div>\n    </div>\n  )\n}\n\n\nvar listLanguages = [\n  <SkillItem skill=\"German\" level=\"native\"/>,\n  <SkillItem skill=\"English\" level=\"CEFR C2\"/>,\n  <SkillItem skill=\"Chinese\" level=\"CEFR B1\"/>,\n  <SkillItem skill=\"French\" level=\"CEFR B1\"/>\n]\n\n\nvar cvSections = [\n  <CVSection title=\"Professional Experience\" content={\n    <Timeline data={professionalExperienceData} getDate={getEndDate} formatDate={dateRange} getBodyFromItem={formatProfessionalExperience} />\n  }/>,\n  <CVSection title=\"Education\" content={\n    <Timeline data={educationData} getDate={getDate} formatDate={getDate} getBodyFromItem={formatEducationExperience}/>\n  }/>,\n  <CVSection title=\"Awards\" content={\n    <Timeline data={awardData} getDate={getDate} formatDate={getDate} getBodyFromItem={formatAward} />\n  }/>,\n  <CVSection title=\"Languages\" content={listLanguages}/>,\n];\n\n// for skills, a word cloud would be nice!!\n","import React from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nexport default function HomePage() {\n  return (\n    <div className=\"flex flex-wrap items-center justify-center\">\n      <div className=\"h-full flex relative\">\n        <StaticImage src=\"../images/me.jpg\" alt=\"\" placeholder=\"None\" quality=\"100\"/>\n        <div className=\"absolute left-10 top-20 md:left-32 md:top-48 lg:left-32 lg:top-96 w-1/3\">\n          <h1 className=\"text-2xl md:text-4xl lg:text-6xl text-neutral-50\">I'm Daniel Kläwer.</h1>\n          <p className=\"hidden lg:block text-neutral-200 text-xl mt-8\">I am a data scientist with research experience in theoretical high energy physics. Please take a look around to learn more about my work!</p>\n        </div>\n      </div>\n      <p className=\"lg:hidden text-neutral-200 text-xl m-8\">I am a data scientist with research experience in theoretical high energy physics. Please take a look around to learn more about my work!</p>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function NavigationBar(props) {\n  const [menuOpen, setMenuOpen] = useState(false);\n  function handleClick(page) {\n    props.onPageChange(page);\n    setMenuOpen(!menuOpen);\n  }\n  return (\n    <div className=\"sticky top-0 z-50 border-b border-neutral-700\">\n      <nav className=\"flex items-center justify-between flex-wrap bg-neutral-900 p-4\">\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <span className=\"font-semibold text-neutral-100 text-xl tracking-tight\">Daniel Kläwer</span>\n        </div>\n        <div className=\"block md:hidden\">\n          <button onClick={() => setMenuOpen(!menuOpen)} className=\"flex items-center px-3 py-2 border rounded text-neutral-200 border-neutral-400 hover:text-blue-900 hover:border-blue-900\">\n            <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" /></svg>\n          </button>\n        </div>\n        <div className={`w-full block flex-grow md:flex md:items-center md:w-auto ${menuOpen ? 'block' : 'hidden'}`}>\n          <div className=\"text-sm md:flex-grow\">\n            <NavigationBarItem text=\"Home\" onClick={() => handleClick('home')} />\n            <NavigationBarItem text=\"CV\" onClick={() => handleClick('cv')} />\n            <NavigationBarItem text=\"Publications\" onClick={() => handleClick('publications')} />\n            <NavigationBarItem text=\"Talks\" onClick={() => handleClick('talks')} />\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\nconst NavigationBarItem = (props) => {\n  return (\n    <button onClick={props.onClick} className=\"block mt-4 md:inline-block md:mt-0 text-neutral-200 hover:text-blue-900 mr-4\">\n      {props.text}\n    </button>\n  );\n};\n","var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++)for(var a in t=arguments[o])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};import React,{createContext,useContext,useRef}from\"react\";var v2Promise,v3Promise,MathJaxBaseContext=createContext(void 0),DEFAULT_V2_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-MML-AM_CHTML\",DEFAULT_V3_SRC=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-chtml.js\",MathJaxContext=function(e){var n=e.config,t=e.version,t=void 0===t?3:t,o=e.src,o=void 0===o?2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC:o,a=e.onStartup,r=e.onLoad,i=e.onError,s=e.typesettingOptions,h=e.renderMode,h=void 0===h?\"post\":h,d=e.hideUntilTypeset,e=e.children,c=useContext(MathJaxBaseContext);if(void 0!==(null==c?void 0:c.version)&&(null==c?void 0:c.version)!==t)throw Error(\"Cannot nest MathJaxContexts with different versions. MathJaxContexts should not be nested at all but if they are, they cannot have different versions. Stick with one version of MathJax in your app and avoid using more than one MathJaxContext.\");if(2===t&&void 0!==v3Promise||3===t&&void 0!==v2Promise)throw Error(\"Cannot use MathJax versions 2 and 3 simultaneously in the same app due to how MathJax is set up in the browser; either you have multiple MathJaxContexts with different versions or you have mounted and unmounted MathJaxContexts with different versions. Please stick with one version of MathJax in your app. File an issue in the project Github page if you need this feature.\");var u=useRef(c),c=useRef((null==c?void 0:c.version)||null);if(null===c.current)c.current=t;else if(c.current!==t)throw Error(\"Cannot change version of MathJax in a MathJaxContext after it has mounted. Reload the page with a new version when this must happen.\");var v=o||(2===t?DEFAULT_V2_SRC:DEFAULT_V3_SRC);function f(t,o){n&&(window.MathJax=n);var e=document.createElement(\"script\");e.type=\"text/javascript\",e.src=v,e.async=!1,e.addEventListener(\"load\",function(){var e=window.MathJax;a&&a(e),t(e),r&&r()}),e.addEventListener(\"error\",function(e){return o(e)}),document.getElementsByTagName(\"head\")[0].appendChild(e)}return void 0===u.current&&(c={typesettingOptions:s,renderMode:h,hideUntilTypeset:d},2===t?void 0===v2Promise&&(\"undefined\"!=typeof window?(v2Promise=new Promise(f)).catch(function(e){if(!i)throw Error(\"Failed to download MathJax version 2 from '\".concat(v,\"' due to: \").concat(e));i(e)}):(v2Promise=Promise.reject()).catch(function(e){})):void 0===v3Promise&&(\"undefined\"!=typeof window?(v3Promise=new Promise(f)).catch(function(e){if(!i)throw Error(\"Failed to download MathJax version 3 from '\".concat(v,\"' due to: \").concat(e));i(e)}):(v3Promise=Promise.reject()).catch(function(e){})),u.current=__assign(__assign({},c),2===t?{version:2,promise:v2Promise}:{version:3,promise:v3Promise})),React.createElement(MathJaxBaseContext.Provider,{value:u.current},e)};export default MathJaxContext;export{MathJaxBaseContext};","var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var i in e=arguments[n])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},__rest=this&&this.__rest||function(t,e){var n={};for(i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&\"function\"==typeof Object.getOwnPropertySymbols)for(var r=0,i=Object.getOwnPropertySymbols(t);r<i.length;r++)e.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(t,i[r])&&(n[i[r]]=t[i[r]]);return n};import React,{useContext,useEffect,useLayoutEffect,useRef}from\"react\";import{MathJaxBaseContext}from\"../MathJaxContext\";var typesettingFailed=function(t){return\"Typesetting failed: \".concat(void 0!==t.message?t.message:t.toString())},MathJax=function(t){function r(){var t;\"every\"===h&&m&&\"post\"===v&&null!==f.current&&(f.current.style.visibility=null!=(t=null==(t=p.style)?void 0:t.visibility)?t:\"visible\"),_.current||(\"first\"===h&&null!==f.current&&(f.current.style.visibility=\"visible\"),n&&n(),_.current=!0),o&&o(),b.current=!1}var e=t.inline,i=void 0!==e&&e,e=t.hideUntilTypeset,n=t.onInitTypeset,o=t.onTypeset,s=t.text,u=t.dynamic,a=t.typesettingOptions,l=t.renderMode,c=t.children,p=__rest(t,[\"inline\",\"hideUntilTypeset\",\"onInitTypeset\",\"onTypeset\",\"text\",\"dynamic\",\"typesettingOptions\",\"renderMode\",\"children\"]),y=useRef(\"\"),f=useRef(null),d=useContext(MathJaxBaseContext),h=null!=e?e:null==d?void 0:d.hideUntilTypeset,v=null!=l?l:null==d?void 0:d.renderMode,g=null!=a?a:null==d?void 0:d.typesettingOptions,m=!1!==u&&(u||\"production\"!==process.env.NODE_ENV),_=useRef(!1),b=useRef(!1);return!b.current&&null!==f.current&&m&&\"every\"===h&&\"post\"===v&&(f.current.style.visibility=\"hidden\"),(\"undefined\"!=typeof window?useLayoutEffect:useEffect)(function(){if((m||!_.current)&&null!==f.current){if(!d)throw Error(\"MathJax was not loaded, did you use the MathJax component outside of a MathJaxContext?\");if(\"pre\"===v){if(!(\"string\"==typeof(t=s)&&0<t.length))throw Error(\"Render mode 'pre' requires text prop to be set and non-empty, which was currently \\\"\".concat(s,'\"'));if(!a||!a.fn)throw Error(\"Render mode 'pre' requires 'typesettingOptions' prop with 'fn' property to be set on MathJax element or in the MathJaxContext\");if(2===d.version)throw Error(\"Render mode 'pre' only available with MathJax 3, and version 2 is currently in use\")}\"post\"!==v&&s===y.current||b.current||(b.current=!0,3===d.version?d.promise.then(function(e){var n;\"pre\"===v?(n=function(t){y.current=s,e.startup.document.clear(),e.startup.document.updateDocument(),null!==f.current&&(f.current.innerHTML=t.outerHTML),r()},a.fn.endsWith(\"Promise\")?e.startup.promise.then(function(){return e[g.fn](s,__assign(__assign({},(null==g?void 0:g.options)||{}),{display:!i}))}).then(n).catch(function(t){throw r(),Error(typesettingFailed(t))}):e.startup.promise.then(function(){var t=e[g.fn](s,__assign(__assign({},(null==g?void 0:g.options)||{}),{display:!i}));n(t)}).catch(function(t){throw r(),Error(typesettingFailed(t))})):e.startup.promise.then(function(){return e.typesetClear([f.current]),e.typesetPromise([f.current])}).then(r).catch(function(t){throw r(),Error(typesettingFailed(t))})}).catch(function(t){throw r(),Error(typesettingFailed(t))}):d.promise.then(function(t){t.Hub.Queue([\"Typeset\",t.Hub,f.current]),t.Hub.Queue(r)}).catch(function(t){throw r(),Error(typesettingFailed(t))}))}var t}),React.createElement(\"span\",__assign({},p,{style:__assign(__assign({display:i?\"inline\":\"block\"},p.style),{visibility:h?\"hidden\":null==(t=p.style)?void 0:t.visibility}),ref:f}),c)};export default MathJax;","import React from 'react';\nimport pubdata from '../data/publications.json';\nimport { MathJaxContext, MathJax } from 'better-react-mathjax';\n\nexport default function PublicationsPage() {\n  return (\n    <MathJaxContext>\n      <div className=\"columns-1 md:columns-2 lg:columns-3 md:mt-4\">\n        {PublicationCards}\n      </div>\n    </MathJaxContext>\n  );\n}\n\nconst PublicationCard = ({ name, description, image, arxiv, doi, journal }) => {\n  return (\n    <div className=\"rounded border-b md:border border-neutral-700 shadow-lg overflow-hidden px-8 py-4 md:px-4 md:mb-4\">\n      <h1 className=\"font-bold text-white text-xl text-center\">{name}</h1>\n      <div>\n        <div className=\"flex flex-wrap justify-center items-center\">\n          <img src={image} alt=\"\" className=\"w-full rounded-sm my-3\" />\n        </div>\n        <div className=\"mb-2\">\n          <p className=\"text-neutral-100 text-justify mb-4\">\n            <MathJax>{description}</MathJax>\n          </p>\n          <a href={arxiv} className=\"inline-block border border-neutral-700 hover:border-white text-neutral-100 hover:text-neutral-900 hover:bg-neutral-100 px-2 rounded-lg mr-2\">\n            ArXiv\n          </a>\n          <a href={doi} className=\"inline-block border border-neutral-700 hover:border-white text-neutral-100 hover:text-neutral-900 hover:bg-neutral-100 px-2 rounded-lg mr-2\">\n            {journal}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PublicationCards = pubdata.map((item) => {\n  return (\n    <PublicationCard\n      name={item.title}\n      description={item.abstract}\n      image={item.image}\n      arxiv={item.arxiv}\n      doi={item.doi}\n      journal={item.journal} />\n  );\n});\n","import React from 'react';\nimport talkdata from '../data/talks.json';\nimport Timeline  from './Timeline';\n\n\nexport default function TalksPage() {\n  return (\n    <div className=\"flex flex-wrap p-4\">\n      <Timeline data={talkdata} getDate={getDate} formatDate={getDate} getBodyFromItem={formatBody}/>\n    </div>\n  );\n};\n\n\nconst getDate = (talk) => talk.date;\n\n\nconst getLocation = (talk) => {\n  let loc = talk.location + (talk.city ? \", \" + talk.city : \"\") + (talk.country ? \", \" + talk.country : \"\")\n  if (talk.type === \"talk (online)\") {\n    if (talk.location === \"online\") {\n      return \"online\"\n    }\n    else {\n      return loc + \" (online)\"\n    }\n  }\n  else {\n    return (\n      loc\n    )\n  }\n}\n\n\nconst formatBody = (talk) => {\n  return(\n    <div>\n      <p class=\"text-base font-normal text-neutral-400 hidden lg:block\">{talk.event} — {getLocation(talk)}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{talk.event}</p>\n      <p class=\"text-base font-normal text-neutral-400 lg:hidden\">{getLocation(talk)}</p>\n      {Object.entries(talk.links).map(\n        ([key, value]) => {\n          return <a className=\"mr-2 text-neutral-400 hover:text-neutral-100\" href={value}>{key}</a>;\n        }\n      )}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport '../styles/global.css' // Import Tailwind styles\nimport CVPage from '../components/CVPage';\nimport HomePage from '../components/HomePage';\nimport NavigationBar from '../components/NavigationBar';\nimport PublicationsPage from '../components/PublicationsPage'\nimport TalksPage from '../components/TalksPage';\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState('home');\n  function handlePageChange(page) {\n    setCurrentPage(page);\n  }\n  return (\n    <div className=\"min-h-screen bg-neutral-900\">\n      <div className=\"container mx-auto\">\n        <NavigationBar onPageChange={handlePageChange} />\n        <div>\n          {currentPage === 'home' && <HomePage />}\n          {currentPage === 'publications' && <PublicationsPage />}\n          {currentPage === 'cv' && <CVPage />}\n          {currentPage === 'talks' && <TalksPage />}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"names":["height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","srcSet","decoding","undefined","fallback","t","s","sizes","Image","length","map","media","type","key","fallbackImage","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","as","className","class","preactClass","onStartLoad","onLoad","onError","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__imageData","imageData","__error","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","TimelineItem","time","caption","body","data","getDate","formatDate","getBodyFromItem","sort","a","b","Date","item","title","CVPage","cvSections","CVSection","content","cvItem","date","SkillItem","skill","level","listLanguages","professionalExperienceData","endDate","startDate","company","city","country","educationData","school","awardData","institution","HomePage","S","quality","NavigationBar","menuOpen","setMenuOpen","useState","handleClick","page","onPageChange","onClick","viewBox","xmlns","d","NavigationBarItem","text","v2Promise","v3Promise","__assign","e","o","n","arguments","hasOwnProperty","call","apply","this","MathJaxBaseContext","createContext","DEFAULT_V2_SRC","DEFAULT_V3_SRC","config","version","onStartup","r","typesettingOptions","h","renderMode","hideUntilTypeset","c","useContext","u","v","f","window","MathJax","document","createElement","async","getElementsByTagName","appendChild","Promise","catch","concat","reject","promise","Provider","value","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","typesettingFailed","message","toString","visibility","p","inline","onInitTypeset","onTypeset","dynamic","l","y","g","fn","startup","clear","updateDocument","outerHTML","endsWith","typesetClear","typesetPromise","Hub","Queue","PublicationsPage","PublicationCards","PublicationCard","name","description","arxiv","doi","journal","href","pubdata","abstract","TalksPage","talkdata","formatBody","talk","getLocation","loc","location","event","entries","links","currentPage","setCurrentPage"],"sourceRoot":""}